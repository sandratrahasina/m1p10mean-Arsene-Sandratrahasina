{
  "version": 3,
  "sources": ["../../../../../node_modules/extend/index.js", "../../../../../node_modules/@delon/util/fesm2022/other.mjs", "../../../../../node_modules/@delon/util/fesm2022/config.mjs"],
  "sourcesContent": ["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n", "import extend from 'extend';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, share, filter, isObservable } from 'rxjs';\n\n/**\n * Gets the value at `path` of `object`, like `_.get` in lodash.\n *\n * 类似 `_.get`，根据 `path` 获取安全值\n */\nfunction deepGet(obj, path, defaultValue) {\n  if (!obj || path == null || path.length === 0) return defaultValue;\n  if (!Array.isArray(path)) {\n    path = ~path.indexOf('.') ? path.split('.') : [path];\n  }\n  if (path.length === 1) {\n    const checkObj = obj[path[0]];\n    return typeof checkObj === 'undefined' ? defaultValue : checkObj;\n  }\n  const res = path.reduce((o, k) => (o || {})[k], obj);\n  return typeof res === 'undefined' ? defaultValue : res;\n}\n/**\n * Base on [extend](https://github.com/justmoon/node-extend) deep copy.\n *\n * 基于 [extend](https://github.com/justmoon/node-extend) 的深度拷贝\n *\n * NOTE: Don't a lot of recursion, maybe performance issues\n */\nfunction deepCopy(obj) {\n  const result = extend(true, {}, {\n    _: obj\n  });\n  return result._;\n}\n/**\n * Deep merge object.\n *\n * 深度合并对象\n *\n * @param original 原始对象\n * @param arrayProcessMethod 数组处理方式\n *  - `true` 表示替换新值，不管新值为哪种类型\n *  - `false` 表示会合并整个数组（将旧数据与新数据合并成新数组）\n * @param objects 要合并的对象\n */\nfunction deepMergeKey(original, arrayProcessMethod, ...objects) {\n  if (Array.isArray(original) || typeof original !== 'object') return original;\n  const isObject = v => typeof v === 'object';\n  const merge = (target, obj) => {\n    Object.keys(obj).filter(key => key !== '__proto__' && Object.prototype.hasOwnProperty.call(obj, key)).forEach(key => {\n      const fromValue = obj[key];\n      const toValue = target[key];\n      if (Array.isArray(toValue)) {\n        target[key] = arrayProcessMethod ? fromValue : [...toValue, ...fromValue];\n      } else if (typeof fromValue === 'function') {\n        target[key] = fromValue;\n      } else if (fromValue != null && isObject(fromValue) && toValue != null && isObject(toValue)) {\n        target[key] = merge(toValue, fromValue);\n      } else {\n        target[key] = deepCopy(fromValue);\n      }\n    });\n    return target;\n  };\n  objects.filter(v => v != null && isObject(v)).forEach(v => merge(original, v));\n  return original;\n}\n/**\n * Deep merge object.\n *\n * 深度合并对象\n */\nfunction deepMerge(original, ...objects) {\n  return deepMergeKey(original, false, ...objects);\n}\nconst record = {};\nconst PREFIX = '[@DELON]:';\nfunction notRecorded(...args) {\n  const asRecord = args.reduce((acc, c) => acc + c.toString(), '');\n  if (record[asRecord]) {\n    return false;\n  } else {\n    record[asRecord] = true;\n    return true;\n  }\n}\nfunction consoleCommonBehavior(consoleFunc, ...args) {\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && notRecorded(...args)) {\n    consoleFunc(...args);\n  }\n}\n// Warning should only be printed in dev mode and only once.\nconst warn = (...args) => consoleCommonBehavior((...arg) => console.warn(PREFIX, ...arg), ...args);\nconst warnDeprecation = (...args) => {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    return () => {};\n  }\n  const stack = new Error().stack;\n  return consoleCommonBehavior((...arg) => console.warn(PREFIX, 'deprecated:', ...arg, stack), ...args);\n};\n// Log should only be printed in dev mode.\nconst log = (...args) => {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    console.log(PREFIX, ...args);\n  }\n};\n\n/**\n * `LazyService` delay loading JS or CSS files.\n *\n * 延迟加载资源（js 或 css）服务\n */\nclass LazyService {\n  constructor() {\n    this.doc = inject(DOCUMENT);\n    this.list = {};\n    this.cached = {};\n    this._notify = new BehaviorSubject([]);\n  }\n  get change() {\n    return this._notify.asObservable().pipe(share(), filter(ls => ls.length !== 0));\n  }\n  clear() {\n    this.list = {};\n    this.cached = {};\n  }\n  attachAttributes(el, attributes) {\n    if (attributes == null) return;\n    Object.entries(attributes).forEach(([key, value]) => {\n      el.setAttribute(key, value);\n    });\n  }\n  /**\n   * Load script or style files\n   */\n  load(paths) {\n    if (!Array.isArray(paths)) {\n      paths = [paths];\n    }\n    const promises = [];\n    paths.map(v => typeof v !== 'object' ? {\n      path: v\n    } : v).forEach(item => {\n      if (item.path.endsWith('.js')) {\n        promises.push(this.loadScript(item.path, item.options));\n      } else {\n        promises.push(this.loadStyle(item.path, item.options));\n      }\n    });\n    return Promise.all(promises).then(res => {\n      this._notify.next(res);\n      return Promise.resolve(res);\n    });\n  }\n  loadScript(path, innerContent, attributes) {\n    const options = typeof innerContent === 'object' ? innerContent : {\n      innerContent,\n      attributes\n    };\n    return new Promise(resolve => {\n      if (this.list[path] === true) {\n        resolve({\n          ...this.cached[path],\n          status: 'loading'\n        });\n        return;\n      }\n      this.list[path] = true;\n      const onSuccess = item => {\n        this.cached[path] = item;\n        resolve(item);\n        this._notify.next([item]);\n      };\n      const node = this.doc.createElement('script');\n      node.type = 'text/javascript';\n      node.src = path;\n      this.attachAttributes(node, options.attributes);\n      if (options.innerContent) {\n        node.innerHTML = options.innerContent;\n      }\n      node.onload = () => onSuccess({\n        path,\n        status: 'ok'\n      });\n      node.onerror = error => onSuccess({\n        path,\n        status: 'error',\n        error\n      });\n      this.doc.getElementsByTagName('head')[0].appendChild(node);\n    });\n  }\n  loadStyle(path, rel, innerContent, attributes) {\n    const options = typeof rel === 'object' ? rel : {\n      rel,\n      innerContent,\n      attributes\n    };\n    return new Promise(resolve => {\n      if (this.list[path] === true) {\n        resolve(this.cached[path]);\n        return;\n      }\n      this.list[path] = true;\n      const node = this.doc.createElement('link');\n      node.rel = options.rel ?? 'stylesheet';\n      node.type = 'text/css';\n      node.href = path;\n      this.attachAttributes(node, options.attributes);\n      if (options.innerContent) {\n        node.innerHTML = options.innerContent;\n      }\n      this.doc.getElementsByTagName('head')[0].appendChild(node);\n      const item = {\n        path,\n        status: 'ok'\n      };\n      this.cached[path] = item;\n      resolve(item);\n    });\n  }\n  static {\n    this.ɵfac = function LazyService_Factory(t) {\n      return new (t || LazyService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: LazyService,\n      factory: LazyService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LazyService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nfunction throwError(msg, actual, expected, comparison) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    throw new Error(`ASSERTION ERROR: ${msg}${comparison == null ? '' : ` [Expected=> ${expected} ${comparison} ${actual} <=Actual]`}`);\n  }\n}\n/**\n * Assert whether the expression and throw an error into console in dev mode\n *\n * 断言表达式是否符合预期，并在开发模式下会在控制台抛出一个错误\n */\nfunction assert(expression, msg) {\n  if (!expression) {\n    throwError(msg);\n  }\n}\n/**\n * Assert whether empty (`null` or `undefined`)\n *\n * 断言是否空值（`null` 或 `undefined`）\n */\nfunction assertEmpty(actual, msg) {\n  if (actual == null) {\n    throwError(msg, typeof actual, 'NULL', '==');\n  }\n}\n/**\n * Assert whether `number` type\n *\n * 断言是否 `number` 类型\n */\nfunction assertNumber(actual, msg) {\n  if (!(typeof actual === 'number')) {\n    throwError(msg, typeof actual, 'number', '===');\n  }\n}\n/**\n * Assert whether `string` type\n *\n * 断言是否 `string` 类型\n */\nfunction assertString(actual, msg) {\n  if (!(typeof actual === 'string')) {\n    throwError(msg, actual === null ? 'null' : typeof actual, 'string', '===');\n  }\n}\n/**\n * Assert whether `array` type\n *\n * 断言是否 `array` 类型\n */\nfunction assertArray(actual, msg) {\n  if (!Array.isArray(actual)) {\n    throwError(msg, actual === null ? 'null' : typeof actual, 'array', '===');\n  }\n}\n/**\n * Assert whether `Observable` type\n *\n * 断言是否 `Observable` 类型\n */\nfunction assertObservable(obj, msg) {\n  if (!isObservable(obj)) {\n    throwError(msg, obj === null ? 'null' : typeof obj, 'Observable', '===');\n  }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LazyService, PREFIX, assert, assertArray, assertEmpty, assertNumber, assertObservable, assertString, deepCopy, deepGet, deepMerge, deepMergeKey, log, warn, warnDeprecation };\n", "import * as i0 from '@angular/core';\nimport { InjectionToken, makeEnvironmentProviders, Injectable, Optional, Inject } from '@angular/core';\nimport { deepMergeKey } from '@delon/util/other';\nclass AlainSVConfig {}\nconst ALAIN_CONFIG = new InjectionToken('alain-config', {\n  providedIn: 'root',\n  factory: ALAIN_CONFIG_FACTORY\n});\nfunction ALAIN_CONFIG_FACTORY() {\n  return {};\n}\nfunction provideAlainConfig(config) {\n  return makeEnvironmentProviders([{\n    provide: ALAIN_CONFIG,\n    useValue: config\n  }]);\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nclass AlainConfigService {\n  constructor(defaultConfig) {\n    this.config = {\n      ...defaultConfig\n    };\n  }\n  get(componentName, key) {\n    const res = this.config[componentName] || {};\n    return key ? {\n      [key]: res[key]\n    } : res;\n  }\n  merge(componentName, ...defaultValues) {\n    return deepMergeKey({}, true, ...defaultValues, this.get(componentName));\n  }\n  attach(componentThis, componentName, defaultValues) {\n    Object.assign(componentThis, this.merge(componentName, defaultValues));\n  }\n  attachKey(componentThis, componentName, key) {\n    Object.assign(componentThis, this.get(componentName, key));\n  }\n  set(componentName, value) {\n    this.config[componentName] = {\n      ...this.config[componentName],\n      ...value\n    };\n  }\n  static {\n    this.ɵfac = function AlainConfigService_Factory(t) {\n      return new (t || AlainConfigService)(i0.ɵɵinject(ALAIN_CONFIG, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AlainConfigService,\n      factory: AlainConfigService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AlainConfigService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ALAIN_CONFIG]\n    }]\n  }], null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ALAIN_CONFIG, ALAIN_CONFIG_FACTORY, AlainConfigService, AlainSVConfig, provideAlainConfig };\n"],
  "mappings": "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",
  "names": ["isArray", "isPlainObject", "setProperty", "getProperty", "extend", "extend"]
}
