{
  "version": 3,
  "sources": ["../../../../../node_modules/@delon/util/fesm2022/format.mjs"],
  "sourcesContent": ["import { deepGet } from '@delon/util/other';\nimport { CurrencyPipe, formatNumber } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { LOCALE_ID, inject, DEFAULT_CURRENCY_CODE, Injectable } from '@angular/core';\nimport * as i1 from '@delon/util/config';\n\n/**\n * String formatting\n *\n * 字符串格式化\n * ```\n * format('this is ${name}', { name: 'asdf' })\n * // output: this is asdf\n * format('this is ${user.name}', { user: { name: 'asdf' } }, true)\n * // output: this is asdf\n * ```\n */\nfunction format(str, obj, needDeepGet = false) {\n  return (str || '').replace(/\\${([^}]+)}/g, (_work, key) => needDeepGet ? deepGet(obj, key.split('.'), '') : (obj || {})[key] || '');\n}\n/**\n * Format mask\n *\n * 格式化掩码\n *\n * | 字符 | 描述 |\n * | --- | --- |\n * | `0` | 任意数字，若该位置字符不符合，则默认为 `0` 填充 |\n * | `9` | 任意数字 |\n * | `#` | 任意字符 |\n * | `U` | 转换大写 |\n * | `L` | 转换小写 |\n * | `*` | 转换为 `*` 字符 |\n *\n * ```ts\n * formatMask('123', '(###)') => (123)\n * formatMask('15900000000', '999****9999') => 159****0000\n * ```\n */\nfunction formatMask(value, option) {\n  if (!value) {\n    return '';\n  }\n  const opt = {\n    ...(typeof option === 'string' ? {\n      mask: option\n    } : option)\n  };\n  const tokens = {\n    '0': {\n      pattern: /\\d/,\n      default: '0'\n    },\n    '9': {\n      pattern: /\\d/\n    },\n    '#': {\n      pattern: /[a-zA-Z0-9]/\n    },\n    U: {\n      pattern: /[a-zA-Z]/,\n      transform: char => char.toLocaleUpperCase()\n    },\n    L: {\n      pattern: /[a-zA-Z]/,\n      transform: char => char.toLocaleLowerCase()\n    },\n    '*': {\n      pattern: /.*/,\n      transform: _ => `*`\n    },\n    ...opt.tokens\n  };\n  const splitValue = value.split('');\n  return opt.mask.split('').reduce((res, cur) => {\n    const token = tokens[cur];\n    if (!token) {\n      res.push(cur);\n      return res;\n    }\n    const value = splitValue.shift() ?? '';\n    if (!token.pattern.test(value)) {\n      if (token.default) res.push(token.default);\n      return res;\n    }\n    if (typeof token.transform === 'function') {\n      res.push(token.transform(value));\n    } else {\n      res.push(value);\n    }\n    return res;\n  }, []).join('');\n}\nconst REGEX_STR = {\n  num: `(([-+]?\\\\d+\\\\.\\\\d+)|([-+]?\\\\d+)|([-+]?\\\\.\\\\d+))(?:[eE]([-+]?\\\\d+))?`,\n  idCard: `(^\\\\d{15}$)|(^\\\\d{17}(?:[0-9]|X)$)`,\n  mobile: `^(0|\\\\+?86|17951)?1[0-9]{10}$`,\n  url: `(((^https?:(?:\\/\\/)?)(?:[-;:&=\\\\+\\\\$,\\\\w]+@)?[A-Za-z0-9.-]+(?::\\\\d+)?|(?:www.|[-;:&=\\\\+\\\\$,\\\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\\\+~%\\\\/.\\\\w-_]*)?\\\\??(?:[-\\\\+=&;%@.\\\\w_]*)#?(?:[\\\\w]*))?)`,\n  ip: `(?:^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$)|(?:^(?:(?:[a-fA-F\\\\d]{1,4}:){7}(?:[a-fA-F\\\\d]{1,4}|:)|(?:[a-fA-F\\\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|:[a-fA-F\\\\d]{1,4}|:)|(?:[a-fA-F\\\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,2}|:)|(?:[a-fA-F\\\\d]{1,4}:){4}(?:(?::[a-fA-F\\\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,3}|:)|(?:[a-fA-F\\\\d]{1,4}:){3}(?:(?::[a-fA-F\\\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,4}|:)|(?:[a-fA-F\\\\d]{1,4}:){2}(?:(?::[a-fA-F\\\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,5}|:)|(?:[a-fA-F\\\\d]{1,4}:){1}(?:(?::[a-fA-F\\\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,6}|:)|(?::(?:(?::[a-fA-F\\\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,7}|:)))(?:%[0-9a-zA-Z]{1,})?$)`,\n  color: `(?:#|0x)(?:[a-f0-9]{3}|[a-f0-9]{6})\\\\b|(?:rgb|hsl)a?\\\\([^\\\\)]*\\\\)`,\n  chinese: `[\\u4e00-\\u9fa5]+`\n};\nfunction genRegex(str, flags) {\n  return new RegExp(`^${str}$`, flags);\n}\nconst REGEX = {\n  num: genRegex(REGEX_STR.num),\n  idCard: genRegex(REGEX_STR.idCard, 'i'),\n  mobile: genRegex(REGEX_STR.mobile),\n  url: genRegex(REGEX_STR.url),\n  ip: genRegex(REGEX_STR.ip),\n  color: genRegex(REGEX_STR.color),\n  chinese: genRegex(REGEX_STR.chinese)\n};\n/**\n * Wheter is number\n *\n * 是否为数字\n */\nfunction isNum(value) {\n  return REGEX.num.test(value.toString());\n}\n/**\n * Wheter is integer\n *\n * 是否为整数\n */\nfunction isInt(value) {\n  return isNum(value) && parseInt(value.toString(), 10).toString() === value.toString();\n}\n/**\n * Wheter is decimal\n *\n * 是否为小数点数值\n */\nfunction isDecimal(value) {\n  return isNum(value) && !isInt(value);\n}\n/**\n * Wheter is People's Republic of China identity card\n *\n * 是否为中华人民共和国居民身份证\n */\nfunction isIdCard(value) {\n  return REGEX.idCard.test(value);\n}\n/**\n * Wheter is china mobile (China)\n *\n * 是否为手机号（中国）\n */\nfunction isMobile(value) {\n  return REGEX.mobile.test(value);\n}\n/**\n * Wheter is url address\n *\n * 是否URL地址\n */\nfunction isUrl(url) {\n  return REGEX.url.test(url);\n}\n/**\n * Wheter is IPv4 address (Support v4, v6)\n *\n * 是否IP4地址（支持v4、v6）\n */\nfunction isIp(ip) {\n  return REGEX.ip.test(ip);\n}\n/**\n * Wheter is color\n *\n * 是否颜色代码值\n */\nfunction isColor(color) {\n  return REGEX.color.test(color);\n}\n/**\n * Wheter is chinese\n *\n * 是否中文\n */\nfunction isChinese(value) {\n  return REGEX.chinese.test(value);\n}\nconst CurrencyMega_Powers = [{\n  unit: 'Q',\n  value: Math.pow(10, 15)\n}, {\n  unit: 'T',\n  value: Math.pow(10, 12)\n}, {\n  unit: 'B',\n  value: Math.pow(10, 9)\n}, {\n  unit: 'M',\n  value: Math.pow(10, 6)\n}, {\n  unit: 'K',\n  value: 1000\n}];\nclass CurrencyService {\n  constructor(cog) {\n    this.locale = inject(LOCALE_ID);\n    this.defCurrencyCode = inject(DEFAULT_CURRENCY_CODE, {\n      optional: true\n    }) ?? 'USD';\n    this.currencyPipe = new CurrencyPipe(this.locale, this.defCurrencyCode);\n    this.c = cog.merge('utilCurrency', {\n      startingUnit: 'yuan',\n      megaUnit: {\n        Q: '京',\n        T: '兆',\n        B: '亿',\n        M: '万',\n        K: '千'\n      },\n      precision: 2,\n      ingoreZeroPrecision: true\n    });\n  }\n  /**\n   * Format a number with commas as thousands separators\n   *\n   * 格式化货币，用逗号将数字格式化为千位分隔符\n   * ```ts\n   * 10000 => `10,000`\n   * 10000.567 => `10,000.57`\n   * ```\n   */\n  format(value, options) {\n    options = {\n      startingUnit: this.c.startingUnit,\n      precision: this.c.precision,\n      ingoreZeroPrecision: this.c.ingoreZeroPrecision,\n      ngCurrency: this.c.ngCurrency,\n      ...options\n    };\n    let truthValue = Number(value);\n    if (value == null || isNaN(truthValue)) {\n      return '';\n    }\n    if (options.startingUnit === 'cent') {\n      truthValue = truthValue / 100;\n    }\n    if (options.ngCurrency != null) {\n      const cur = options.ngCurrency;\n      return this.currencyPipe.transform(truthValue, cur.currencyCode, cur.display, cur.digitsInfo, cur.locale || this.locale);\n    }\n    const res = formatNumber(truthValue, this.locale, `.${options.ingoreZeroPrecision ? 1 : options.precision}-${options.precision}`);\n    return options.ingoreZeroPrecision ? res.replace(/(?:\\.[0]+)$/g, '') : res;\n  }\n  /**\n   * Large number format filter\n   *\n   * 大数据格式化\n   * ```ts\n   * 1000 => { value: '1', unit: 'K', unitI18n: '千' }\n   * 12456 => { value: '12.46', unit: 'K', unitI18n: '千' }\n   * ```\n   */\n  mega(value, options) {\n    options = {\n      precision: this.c.precision,\n      unitI18n: this.c.megaUnit,\n      startingUnit: this.c.startingUnit,\n      ...options\n    };\n    let num = Number(value);\n    const res = {\n      raw: value,\n      value: '',\n      unit: '',\n      unitI18n: ''\n    };\n    if (isNaN(num) || num === 0) {\n      res.value = value.toString();\n      return res;\n    }\n    if (options.startingUnit === 'cent') {\n      num = num / 100;\n    }\n    let abs = Math.abs(+num);\n    const rounder = Math.pow(10, options.precision);\n    const isNegative = num < 0;\n    for (const p of CurrencyMega_Powers) {\n      let reduced = abs / p.value;\n      reduced = Math.round(reduced * rounder) / rounder;\n      if (reduced >= 1) {\n        abs = reduced;\n        res.unit = p.unit;\n        break;\n      }\n    }\n    res.value = (isNegative ? '-' : '') + abs;\n    res.unitI18n = options.unitI18n[res.unit];\n    return res;\n  }\n  /**\n   * Converted into RMB notation.\n   *\n   * 转化成人民币表示法\n   */\n  cny(value, options) {\n    options = {\n      inWords: true,\n      minusSymbol: '负',\n      startingUnit: this.c.startingUnit,\n      ...options\n    };\n    value = Number(value);\n    if (isNaN(value)) {\n      return '';\n    }\n    if (options.startingUnit === 'cent') {\n      value = value / 100;\n    }\n    value = value.toString();\n    let integer;\n    let decimal;\n    [integer, decimal] = value.split('.');\n    let symbol = '';\n    if (integer.startsWith('-')) {\n      symbol = options.minusSymbol;\n      integer = integer.substring(1);\n    }\n    if (/^-?\\d+$/.test(value)) {\n      decimal = null;\n    }\n    integer = (+integer).toString();\n    const inWords = options.inWords;\n    const unit = {\n      num: inWords ? ['', '壹', '贰', '叁', '肆', '伍', '陆', '柒', '捌', '玖', '点'] : ['', '一', '二', '三', '四', '五', '六', '七', '八', '九', '点'],\n      radice: inWords ? ['', '拾', '佰', '仟', '万', '拾', '佰', '仟', '亿', '拾', '佰', '仟', '万亿', '拾', '佰', '仟', '兆', '拾', '佰', '仟'] : ['', '十', '百', '千', '万', '十', '百', '千', '亿', '十', '百', '千', '万亿', '十', '百', '千', '兆', '十', '百', '千'],\n      dec: ['角', '分', '厘', '毫']\n    };\n    if (inWords) {\n      value = (+value).toFixed(5).toString();\n    }\n    let integerRes = '';\n    const integerCount = integer.length;\n    if (integer === '0' || integerCount === 0) {\n      integerRes = '零';\n    } else {\n      let cnDesc = '';\n      for (let i = 0; i < integerCount; i++) {\n        const n = +integer[i];\n        const j = integerCount - i - 1;\n        const isZero = i > 1 && n !== 0 && integer[i - 1] === '0';\n        const cnZero = isZero ? '零' : '';\n        const isEmpptyUnit = n === 0 && j % 4 !== 0 || integer.substring(i - 3, i - 3 + 4) === '0000';\n        const descMark = cnDesc;\n        let cnNum = unit.num[n];\n        cnDesc = isEmpptyUnit ? '' : unit.radice[j];\n        // 第一位是一十\n        if (i === 0 && cnNum === '一' && cnDesc === '十') cnNum = '';\n        const isChangeEr = n > 1 && cnNum === '二' &&\n        // 去除首位\n        ['', '十', '百'].indexOf(cnDesc) === -1 &&\n        // 不读两\\两十\\两百\n        descMark !== '十'; // 不读十两\n        if (isChangeEr) cnNum = '两';\n        integerRes += cnZero + cnNum + cnDesc;\n      }\n    }\n    // 小数部分拼接\n    let decimalRes = '';\n    const decimalCount = decimal ? decimal.toString().length : 0;\n    if (decimal === null) {\n      decimalRes = inWords ? '整' : '';\n    } else if (decimal === '0') {\n      decimalRes = '零';\n    } else {\n      for (let i = 0; i < decimalCount; i++) {\n        if (inWords && i > unit.dec.length - 1) break;\n        const n = decimal[i];\n        const cnZero = n === '0' ? '零' : '';\n        const cnNum = unit.num[+n];\n        const cnDesc = inWords ? unit.dec[i] : '';\n        decimalRes += cnZero + cnNum + cnDesc;\n      }\n    }\n    const ret = symbol + (inWords ? integerRes + (decimalRes === '零' ? '元整' : `元${decimalRes}`) : integerRes + (decimalRes === '' ? '' : `点${decimalRes}`));\n    return ret;\n  }\n  static {\n    this.ɵfac = function CurrencyService_Factory(t) {\n      return new (t || CurrencyService)(i0.ɵɵinject(i1.AlainConfigService));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CurrencyService,\n      factory: CurrencyService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CurrencyService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.AlainConfigService\n  }], null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CurrencyMega_Powers, CurrencyService, REGEX, REGEX_STR, format, formatMask, isChinese, isColor, isDecimal, isIdCard, isInt, isIp, isMobile, isNum, isUrl };\n"],
  "mappings": "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",
  "names": ["value"]
}
