{
  "version": 3,
  "sources": ["../../../../../node_modules/@delon/auth/fesm2022/auth.mjs"],
  "sourcesContent": ["import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injectable, makeEnvironmentProviders } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject, BehaviorSubject, share, map, filter, interval, Observable } from 'rxjs';\nimport * as i1 from '@delon/util/config';\nimport { AlainConfigService } from '@delon/util/config';\nimport { CookieService } from '@delon/util/browser';\nimport { HttpContextToken, HttpErrorResponse } from '@angular/common/http';\nconst AUTH_DEFAULT_CONFIG = {\n  store_key: `_token`,\n  token_invalid_redirect: true,\n  token_exp_offset: 10,\n  token_send_key: `token`,\n  token_send_template: '${token}',\n  token_send_place: 'header',\n  login_url: '/login',\n  refreshTime: 3000,\n  refreshOffset: 6000\n};\nfunction mergeConfig(srv) {\n  return srv.merge('auth', AUTH_DEFAULT_CONFIG);\n}\nfunction DA_STORE_TOKEN_LOCAL_FACTORY() {\n  return new LocalStorageStore();\n}\n/**\n * `localStorage` storage, **not lost after closing the browser**.\n *\n * ```ts\n * provideAuth(withJWT(), withLocalStorage())\n * ```\n */\nclass LocalStorageStore {\n  get(key) {\n    return JSON.parse(localStorage.getItem(key) || '{}') || {};\n  }\n  set(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  }\n  remove(key) {\n    localStorage.removeItem(key);\n  }\n}\nconst DA_STORE_TOKEN = new InjectionToken('AUTH_STORE_TOKEN', {\n  providedIn: 'root',\n  factory: DA_STORE_TOKEN_LOCAL_FACTORY\n});\nfunction DA_SERVICE_TOKEN_FACTORY() {\n  return new TokenService(inject(AlainConfigService));\n}\n/**\n * 维护Token信息服务，[在线文档](https://ng-alain.com/auth)\n */\nclass TokenService {\n  constructor(configSrv) {\n    this.store = inject(DA_STORE_TOKEN);\n    this.refresh$ = new Subject();\n    this.change$ = new BehaviorSubject(null);\n    this._referrer = {};\n    this._options = mergeConfig(configSrv);\n  }\n  get refresh() {\n    this.builderRefresh();\n    return this.refresh$.pipe(share());\n  }\n  get login_url() {\n    return this._options.login_url;\n  }\n  get referrer() {\n    return this._referrer;\n  }\n  get options() {\n    return this._options;\n  }\n  set(data) {\n    const res = this.store.set(this._options.store_key, data);\n    this.change$.next(data);\n    return res;\n  }\n  get(type) {\n    const data = this.store.get(this._options.store_key);\n    return type ? Object.assign(new type(), data) : data;\n  }\n  clear(options = {\n    onlyToken: false\n  }) {\n    let data = null;\n    if (options.onlyToken === true) {\n      data = this.get();\n      data.token = ``;\n      this.set(data);\n    } else {\n      this.store.remove(this._options.store_key);\n    }\n    this.change$.next(data);\n  }\n  change() {\n    return this.change$.pipe(share());\n  }\n  builderRefresh() {\n    const {\n      refreshTime,\n      refreshOffset\n    } = this._options;\n    this.cleanRefresh();\n    this.interval$ = interval(refreshTime).pipe(map(() => {\n      const item = this.get();\n      const expired = item.expired || item.exp || 0;\n      if (expired <= 0) {\n        return null;\n      }\n      const curTime = new Date().valueOf() + refreshOffset;\n      return expired <= curTime ? item : null;\n    }), filter(v => v != null)).subscribe(res => this.refresh$.next(res));\n  }\n  cleanRefresh() {\n    if (this.interval$ && !this.interval$.closed) {\n      this.interval$.unsubscribe();\n    }\n  }\n  ngOnDestroy() {\n    this.cleanRefresh();\n  }\n  static {\n    this.ɵfac = function TokenService_Factory(t) {\n      return new (t || TokenService)(i0.ɵɵinject(i1.AlainConfigService));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TokenService,\n      factory: TokenService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TokenService, [{\n    type: Injectable\n  }], () => [{\n    type: i1.AlainConfigService\n  }], null);\n})();\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst DA_SERVICE_TOKEN = new InjectionToken('DA_SERVICE_TOKEN', {\n  providedIn: 'root',\n  factory: DA_SERVICE_TOKEN_FACTORY\n});\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst OPENTYPE = '_delonAuthSocialType';\nconst HREFCALLBACK = '_delonAuthSocialCallbackByHref';\nclass SocialService {\n  constructor() {\n    this.tokenService = inject(DA_SERVICE_TOKEN);\n    this.doc = inject(DOCUMENT);\n    this.router = inject(Router);\n    this._win = null;\n  }\n  /**\n   * 跳转至登录页，若为 `type=window` 时，返回值是 `Observable<ITokenModel>`\n   *\n   * @param url 获取授权地址\n   * @param callback 当 `type=href` 成功时的回调路由地址\n   * @param options.type 打开方式，默认 `window`\n   * @param options.windowFeatures 等同 `window.open` 的 `features` 参数值\n   */\n  login(url, callback = '/', options = {}) {\n    options = {\n      type: 'window',\n      windowFeatures: 'location=yes,height=570,width=520,scrollbars=yes,status=yes',\n      ...options\n    };\n    localStorage.setItem(OPENTYPE, options.type);\n    localStorage.setItem(HREFCALLBACK, callback);\n    if (options.type === 'href') {\n      this.doc.location.href = url;\n      return;\n    }\n    this._win = window.open(url, '_blank', options.windowFeatures);\n    this._winTime = setInterval(() => {\n      if (this._win && this._win.closed) {\n        this.ngOnDestroy();\n        let model = this.tokenService.get();\n        if (model && !model.token) model = null;\n        // 触发变更通知\n        if (model) {\n          this.tokenService.set(model);\n        }\n        this.observer.next(model);\n        this.observer.complete();\n      }\n    }, 100);\n    return new Observable(observer => {\n      this.observer = observer;\n    });\n  }\n  /**\n   * 授权成功后的回调处理\n   *\n   * @param rawData 指定回调认证信息，为空时从根据当前URL解析\n   */\n  callback(rawData) {\n    // from uri\n    if (!rawData && this.router.url.indexOf('?') === -1) {\n      throw new Error(`url muse contain a ?`);\n    }\n    // parse\n    let data = {\n      token: ``\n    };\n    if (typeof rawData === 'string') {\n      const rightUrl = rawData.split('?')[1].split('#')[0];\n      data = this.router.parseUrl(`./?${rightUrl}`).queryParams;\n    } else {\n      data = rawData;\n    }\n    if (!data || !data.token) throw new Error(`invalide token data`);\n    this.tokenService.set(data);\n    const url = localStorage.getItem(HREFCALLBACK) || '/';\n    localStorage.removeItem(HREFCALLBACK);\n    const type = localStorage.getItem(OPENTYPE);\n    localStorage.removeItem(OPENTYPE);\n    if (type === 'window') {\n      window.close();\n    } else {\n      this.router.navigateByUrl(url);\n    }\n    return data;\n  }\n  ngOnDestroy() {\n    clearInterval(this._winTime);\n    this._winTime = null;\n  }\n  static {\n    this.ɵfac = function SocialService_Factory(t) {\n      return new (t || SocialService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: SocialService,\n      factory: SocialService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SocialService, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * 内存存储，关掉浏览器标签后**丢失**。\n */\nclass MemoryStore {\n  constructor() {\n    this.cache = {};\n  }\n  get(key) {\n    return this.cache[key] || {};\n  }\n  set(key, value) {\n    this.cache[key] = value;\n    return true;\n  }\n  remove(key) {\n    this.cache[key] = null;\n  }\n}\n\n/**\n * `sessionStorage` storage, **lost after closing the browser**.\n *\n * ```ts\n * provideAuth(withJWT(), withSessionStorage())\n * ```\n */\nclass SessionStorageStore {\n  get(key) {\n    return JSON.parse(sessionStorage.getItem(key) || '{}') || {};\n  }\n  set(key, value) {\n    sessionStorage.setItem(key, JSON.stringify(value));\n    return true;\n  }\n  remove(key) {\n    sessionStorage.removeItem(key);\n  }\n}\n\n/**\n * `cookie` storage\n *\n * ```ts\n * provideAuth(withJWT(), withCookie())\n * ```\n */\nclass CookieStorageStore {\n  constructor() {\n    this.srv = inject(CookieService);\n  }\n  get(key) {\n    try {\n      return JSON.parse(this.srv.get(key) || '{}');\n    } catch (ex) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.error(`CookieStorageStore: Invalid key-value format ${key}`, ex);\n      }\n      return {};\n    }\n  }\n  set(key, value) {\n    const expires = (value?.expired ?? 0) / 1e3;\n    this.srv.put(key, JSON.stringify(value ?? {}), {\n      expires\n    });\n    return true;\n  }\n  remove(key) {\n    this.srv.remove(key);\n  }\n}\nfunction urlBase64Decode(str) {\n  let output = str.replace(/-/g, '+').replace(/_/g, '/');\n  switch (output.length % 4) {\n    case 0:\n      {\n        break;\n      }\n    case 2:\n      {\n        output += '==';\n        break;\n      }\n    case 3:\n      {\n        output += '=';\n        break;\n      }\n    default:\n      {\n        throw new Error(`'atob' failed: The string to be decoded is not correctly encoded.`);\n      }\n  }\n  return b64DecodeUnicode(output);\n}\nfunction b64decode(str) {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  let output = '';\n  str = String(str).replace(/=+$/, '');\n  for (\n  // initialize result and counters\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let bc = 0, bs, buffer, idx = 0;\n  // get next character\n  buffer = str.charAt(idx++);\n  // character found in table? initialize bit storage and add its ascii value;\n  ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n  // and if not first of each 4 characters,\n  // convert the first 8 bits to one ascii character\n  bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n// https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(Array.prototype.map.call(b64decode(str), c => {\n    return `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`;\n  }).join(''));\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nclass JWTTokenModel {\n  /**\n   * 获取载荷信息\n   */\n  get payload() {\n    const parts = (this.token || '').split('.');\n    if (parts.length !== 3) throw new Error('JWT must have 3 parts');\n    const decoded = urlBase64Decode(parts[1]);\n    return JSON.parse(decoded);\n  }\n  /**\n   * 获取过期时间戳（单位：ms）\n   */\n  get exp() {\n    const decoded = this.payload;\n    if (!decoded.hasOwnProperty('exp')) return null;\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n    return date.valueOf();\n  }\n  /**\n   * 检查Token是否过期，当`payload` 包含 `exp` 字段时有效，若无 `exp` 字段直接返回 `null`\n   *\n   * @param offsetSeconds 偏移量\n   */\n  isExpired(offsetSeconds = 0) {\n    const exp = this.exp;\n    if (exp == null) return null;\n    return !(exp > new Date().valueOf() + offsetSeconds * 1000);\n  }\n}\nfunction CheckSimple(model) {\n  return model != null && typeof model.token === 'string' && model.token.length > 0;\n}\nfunction CheckJwt(model, offset) {\n  try {\n    return model != null && !!model.token && !model.isExpired(offset);\n  } catch (err) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      console.warn(`${err.message}, jump to login_url`);\n    }\n    return false;\n  }\n}\nfunction ToLogin(options, url) {\n  const router = inject(Router);\n  const token = inject(DA_SERVICE_TOKEN);\n  const doc = inject(DOCUMENT);\n  token.referrer.url = url || router.url;\n  if (options.token_invalid_redirect === true) {\n    setTimeout(() => {\n      if (/^https?:\\/\\//g.test(options.login_url)) {\n        doc.location.href = options.login_url;\n      } else {\n        router.navigate([options.login_url]);\n      }\n    });\n  }\n}\nclass AuthJWTGuardService {\n  constructor() {\n    this.srv = inject(DA_SERVICE_TOKEN);\n  }\n  process(url) {\n    const cog = this.srv.options;\n    const res = CheckJwt(this.srv.get(JWTTokenModel), cog.token_exp_offset);\n    if (!res) {\n      ToLogin(cog, url);\n    }\n    return res;\n  }\n  static {\n    this.ɵfac = function AuthJWTGuardService_Factory(t) {\n      return new (t || AuthJWTGuardService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AuthJWTGuardService,\n      factory: AuthJWTGuardService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AuthJWTGuardService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * JWT 路由守卫, [ACL Document](https://ng-alain.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivate: [ authJWTCanActivate ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\nconst authJWTCanActivate = (_, state) => inject(AuthJWTGuardService).process(state.url);\n/**\n * JWT 路由守卫, [ACL Document](https://ng-alain.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivateChild: [ authJWTCanActivateChild ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\nconst authJWTCanActivateChild = (_, state) => inject(AuthJWTGuardService).process(state.url);\n/**\n * JWT 路由守卫, [ACL Document](https://ng-alain.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canMatch: [ authJWTCanMatch ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\nconst authJWTCanMatch = route => inject(AuthJWTGuardService).process(route.path);\n\n/**\n * Whether to allow anonymous login\n *\n * 是否允许匿名登录\n *\n * @example\n * this.http.post(`login`, {\n *  name: 'cipchk', pwd: '123456'\n * }, {\n *  context: new HttpContext().set(ALLOW_ANONYMOUS, true)\n * })\n */\nconst ALLOW_ANONYMOUS = new HttpContextToken(() => false);\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction isAnonymous(req, options) {\n  if (req.context.get(ALLOW_ANONYMOUS)) return true;\n  if (Array.isArray(options.ignores)) {\n    for (const item of options.ignores) {\n      if (item.test(req.url)) return true;\n    }\n  }\n  return false;\n}\nfunction throwErr(req, options) {\n  ToLogin(options);\n  // Interrupt Http request, so need to generate a new Observable\n  return new Observable(observer => {\n    let statusText = '';\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      statusText = `来自 @delon/auth 的拦截，所请求URL未授权，若是登录API可加入 new HttpContext().set(ALLOW_ANONYMOUS, true) 来表示忽略校验，更多方法请参考： https://ng-alain.com/auth/getting-started#AlainAuthConfig\\nThe interception from @delon/auth, the requested URL is not authorized. If the login API can add new HttpContext().set(ALLOW_ANONYMOUS, true) to ignore the check, please refer to: https://ng-alain.com/auth/getting-started#AlainAuthConfig`;\n    }\n    const res = new HttpErrorResponse({\n      url: req.url,\n      headers: req.headers,\n      status: 401,\n      statusText\n    });\n    observer.error(res);\n  });\n}\nfunction newReq$1(req, model) {\n  return req.clone({\n    setHeaders: {\n      Authorization: `Bearer ${model.token}`\n    }\n  });\n}\nconst authJWTInterceptor = (req, next) => {\n  const options = mergeConfig(inject(AlainConfigService));\n  if (isAnonymous(req, options)) return next(req);\n  const model = inject(DA_SERVICE_TOKEN).get(JWTTokenModel);\n  if (CheckJwt(model, options.token_exp_offset)) return next(newReq$1(req, model));\n  return throwErr(req, options);\n};\nclass AuthSimpleGuardService {\n  constructor() {\n    this.srv = inject(DA_SERVICE_TOKEN);\n  }\n  process(url) {\n    const res = CheckSimple(this.srv.get());\n    if (!res) {\n      ToLogin(this.srv.options, url);\n    }\n    return res;\n  }\n  static {\n    this.ɵfac = function AuthSimpleGuardService_Factory(t) {\n      return new (t || AuthSimpleGuardService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AuthSimpleGuardService,\n      factory: AuthSimpleGuardService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AuthSimpleGuardService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * Simple 路由守卫, [ACL Document](https://ng-alain.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivate: [ authSimpleCanActivate ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\nconst authSimpleCanActivate = (_, state) => inject(AuthSimpleGuardService).process(state.url);\n/**\n * Simple 路由守卫, [ACL Document](https://ng-alain.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivateChild: [ authSimpleCanActivateChild ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\nconst authSimpleCanActivateChild = (_, state) => inject(AuthSimpleGuardService).process(state.url);\n/**\n * Simple 路由守卫, [ACL Document](https://ng-alain.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canMatch: [ authSimpleCanMatch ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\nconst authSimpleCanMatch = route => inject(AuthSimpleGuardService).process(route.path);\nfunction newReq(req, model, options) {\n  const {\n    token_send_template,\n    token_send_key\n  } = options;\n  const token = token_send_template.replace(/\\$\\{([\\w]+)\\}/g, (_, g) => model[g]);\n  switch (options.token_send_place) {\n    case 'header':\n      const obj = {};\n      obj[token_send_key] = token;\n      req = req.clone({\n        setHeaders: obj\n      });\n      break;\n    case 'body':\n      const body = req.body || {};\n      body[token_send_key] = token;\n      req = req.clone({\n        body\n      });\n      break;\n    case 'url':\n      req = req.clone({\n        params: req.params.append(token_send_key, token)\n      });\n      break;\n  }\n  return req;\n}\nconst authSimpleInterceptor = (req, next) => {\n  const options = mergeConfig(inject(AlainConfigService));\n  if (isAnonymous(req, options)) return next(req);\n  const model = inject(DA_SERVICE_TOKEN).get();\n  if (CheckSimple(model)) return next(newReq(req, model, options));\n  return throwErr(req, options);\n};\nclass SimpleTokenModel {}\nvar AuthFeatureKind;\n(function (AuthFeatureKind) {\n  AuthFeatureKind[AuthFeatureKind[\"Store\"] = 0] = \"Store\";\n})(AuthFeatureKind || (AuthFeatureKind = {}));\nfunction makeAuthFeature(kind, providers) {\n  return {\n    ɵkind: kind,\n    ɵproviders: providers\n  };\n}\n/**\n * Configures authentication process service to be available for injection.\n *\n * @see {@link withCookie}\n * @see {@link withLocalStorage}\n * @see {@link withSessionStorage}\n */\nfunction provideAuth(store) {\n  return makeEnvironmentProviders([(store ?? withLocalStorage()).ɵproviders]);\n}\n/** `cookie` storage */\nfunction withCookie() {\n  return makeAuthFeature(AuthFeatureKind.Store, [{\n    provide: DA_STORE_TOKEN,\n    useClass: CookieStorageStore,\n    deps: [CookieService]\n  }]);\n}\n/** `localStorage` storage, **not lost after closing the browser**. */\nfunction withLocalStorage() {\n  return makeAuthFeature(AuthFeatureKind.Store, [{\n    provide: DA_STORE_TOKEN,\n    useClass: LocalStorageStore\n  }]);\n}\n/** `sessionStorage` storage, **lost after closing the browser**. */\nfunction withSessionStorage() {\n  return makeAuthFeature(AuthFeatureKind.Store, [{\n    provide: DA_STORE_TOKEN,\n    useClass: SessionStorageStore\n  }]);\n}\n/** Memory storage, **lost after closing the browser tab**. */\nfunction withMemoryStorage() {\n  return makeAuthFeature(AuthFeatureKind.Store, [{\n    provide: DA_STORE_TOKEN,\n    useClass: MemoryStore\n  }]);\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ALLOW_ANONYMOUS, AUTH_DEFAULT_CONFIG, AuthFeatureKind, AuthJWTGuardService, AuthSimpleGuardService, CookieStorageStore, DA_SERVICE_TOKEN, DA_SERVICE_TOKEN_FACTORY, DA_STORE_TOKEN, DA_STORE_TOKEN_LOCAL_FACTORY, JWTTokenModel, LocalStorageStore, MemoryStore, SessionStorageStore, SimpleTokenModel, SocialService, TokenService, authJWTCanActivate, authJWTCanActivateChild, authJWTCanMatch, authJWTInterceptor, authSimpleCanActivate, authSimpleCanActivateChild, authSimpleCanMatch, authSimpleInterceptor, isAnonymous, mergeConfig, provideAuth, throwErr, urlBase64Decode, withCookie, withLocalStorage, withMemoryStorage, withSessionStorage };\n"],
  "mappings": "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",
  "names": ["AuthFeatureKind"]
}
