{
  "version": 3,
  "sources": ["../../../../../node_modules/@delon/util/fesm2022/browser.mjs"],
  "sourcesContent": ["import { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable } from '@angular/core';\n\n/**\n * A set of simple Cookie manipulation classes.\n *\n * 一组简单的 Cookie 操作类。\n */\nclass CookieService {\n  constructor() {\n    this._doc = inject(DOCUMENT);\n    this.platform = inject(Platform);\n  }\n  get doc() {\n    return this._doc || document;\n  }\n  /**\n   * Original cookie value\n   *\n   * 原始Cookie值\n   */\n  get cookie() {\n    return this.platform.isBrowser ? this.doc.cookie : '';\n  }\n  /**\n   * Get all cookie key-value pairs\n   *\n   * 获取所有Cookie键值对\n   */\n  getAll() {\n    const ret = {};\n    const arr = this.cookie.split('; ');\n    for (let i = 0; i < arr.length; i++) {\n      const cookie = arr[i];\n      const index = cookie.indexOf('=');\n      if (index > 0) {\n        const name = decodeURIComponent(cookie.substring(0, index));\n        if (ret[name] == null) {\n          ret[name] = decodeURIComponent(cookie.substring(index + 1));\n        }\n      }\n    }\n    return ret;\n  }\n  /**\n   * Get the value of given cookie `key`\n   *\n   * 获取指定 `key` 的值\n   */\n  get(key) {\n    return this.getAll()[key];\n  }\n  /**\n   * Sets a value for given cookie key\n   *\n   * 设置指定 Cookie 键的值\n   */\n  put(key, value, options) {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    const opt = {\n      path: '/',\n      ...options\n    };\n    if (typeof opt.expires === 'number') {\n      opt.expires = new Date(+new Date() + opt.expires * 1e3);\n    }\n    if (typeof opt.expires !== 'string') {\n      opt.expires = opt.expires ? opt.expires.toUTCString() : '';\n    }\n    const optStr = opt;\n    const attributes = Object.keys(optStr).filter(k => optStr[k] && optStr[k] !== true).map(k => `${k}=${optStr[k].split(';')[0]}`).join(';');\n    this.doc.cookie = `${encodeURIComponent(String(key))}=${encodeURIComponent(String(value))}${attributes ? `; ${attributes}` : ''}`;\n  }\n  /**\n   * Remove given cookie\n   *\n   * 移除指定 Cookie\n   */\n  remove(key, options) {\n    this.put(key, '', options);\n  }\n  /**\n   * Remove all cookies\n   *\n   * 移除所有 Cookies\n   */\n  removeAll() {\n    this.doc.cookie = '';\n  }\n  static {\n    this.ɵfac = function CookieService_Factory(t) {\n      return new (t || CookieService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CookieService,\n      factory: CookieService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CookieService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * Copy text to clipboard\n *\n * 复制字符串文档至剪贴板\n */\nfunction copy(value) {\n  return new Promise(resolve => {\n    let copyTextArea = null;\n    try {\n      copyTextArea = document.createElement('textarea');\n      copyTextArea.style.height = '0px';\n      copyTextArea.style.opacity = '0';\n      copyTextArea.style.width = '0px';\n      document.body.appendChild(copyTextArea);\n      copyTextArea.value = value;\n      copyTextArea.select();\n      // eslint-disable-next-line deprecation/deprecation\n      document.execCommand('copy');\n      resolve(value);\n    } finally {\n      if (copyTextArea && copyTextArea.parentNode) {\n        copyTextArea.parentNode.removeChild(copyTextArea);\n      }\n    }\n  });\n}\n\n/**\n * Used to verify `<ng-content />` is empty, useful for custom components.\n *\n * 用于校验 `<ng-content />` 是否为空，自定义组件时蛮有用。\n */\nfunction isEmpty(element) {\n  const nodes = element.childNodes;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes.item(i);\n    if (node.nodeType === 1 && node.outerHTML.toString().trim().length !== 0) {\n      return false;\n    } else if (node.nodeType === 3 && node.textContent.toString().trim().length !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\nclass ScrollService {\n  constructor() {\n    this._doc = inject(DOCUMENT);\n    this.platform = inject(Platform);\n  }\n  _getDoc() {\n    return this._doc || document;\n  }\n  _getWin() {\n    const doc = this._getDoc();\n    return doc.defaultView || window;\n  }\n  /**\n   * 获取滚动条位置\n   *\n   * @param element 指定元素，默认 `window`\n   */\n  getScrollPosition(element) {\n    if (!this.platform.isBrowser) {\n      return [0, 0];\n    }\n    const win = this._getWin();\n    if (element && element !== win) {\n      return [element.scrollLeft, element.scrollTop];\n    } else {\n      return [win.scrollX, win.scrollY];\n    }\n  }\n  /**\n   * 设置滚动条位置\n   *\n   * @param element 指定元素\n   */\n  scrollToPosition(element, position) {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    (element || this._getWin()).scrollTo(position[0], position[1]);\n  }\n  /**\n   * 设置滚动条至指定元素\n   *\n   * @param element 指定元素，默认 `document.body`\n   * @param topOffset 偏移值，默认 `0`\n   */\n  scrollToElement(element, topOffset = 0) {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    if (!element) {\n      element = this._getDoc().body;\n    }\n    element.scrollIntoView();\n    const win = this._getWin();\n    if (win && win.scrollBy) {\n      win.scrollBy(0, element.getBoundingClientRect().top - topOffset);\n      if (win.scrollY < 20) {\n        win.scrollBy(0, -win.scrollY);\n      }\n    }\n  }\n  /**\n   * 滚动至顶部\n   *\n   * @param topOffset 偏移值，默认 `0`\n   */\n  scrollToTop(topOffset = 0) {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this.scrollToElement(this._getDoc().body, topOffset);\n  }\n  static {\n    this.ɵfac = function ScrollService_Factory(t) {\n      return new (t || ScrollService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ScrollService,\n      factory: ScrollService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nfunction removeClass(el, classMap, renderer) {\n  Object.keys(classMap).forEach(key => renderer.removeClass(el, key));\n}\nfunction addClass(el, classMap, renderer) {\n  for (const i in classMap) {\n    if (classMap[i]) {\n      renderer.addClass(el, i);\n    }\n  }\n}\n/**\n * Update host component style `class`\n *\n * 更新宿主组件样式 `class`\n *\n * ```ts\n * updateHostClass(\n *  this.el.nativeElement,\n *  this.renderer,\n *  {\n *    [ 'classname' ]: true,\n *    [ 'classname' ]: this.type === '1',\n *    [ this.cls ]: true,\n *    [ `a-${this.cls}` ]: true\n *  })\n * ```\n */\nfunction updateHostClass(el, renderer, classMap, preClean = false) {\n  if (preClean === true) {\n    renderer.removeAttribute(el, 'class');\n  } else {\n    removeClass(el, classMap, renderer);\n  }\n  classMap = {\n    ...classMap\n  };\n  addClass(el, classMap, renderer);\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CookieService, ScrollService, copy, isEmpty, updateHostClass };\n"],
  "mappings": "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",
  "names": []
}
