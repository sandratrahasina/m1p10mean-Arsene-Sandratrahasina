{
  "version": 3,
  "sources": ["../../../../../node_modules/@delon/util/fesm2022/token.mjs"],
  "sourcesContent": ["import { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken } from '@angular/core';\nimport { startWith, map, distinctUntilChanged, share, fromEvent } from 'rxjs';\n\n/**\n * Access to global `window` object\n *\n * 访问全局 `window` 对象\n */\nconst WINDOW = new InjectionToken('WINDOW', {\n    factory: () => {\n        const { defaultView } = inject(DOCUMENT);\n        if (!defaultView) {\n            throw new Error('Window is not available');\n        }\n        return defaultView;\n    }\n});\n\n/**\n * Use the `visibilitychange` event to monitor whether the browser tab is visible, which is generally used when the user leaves the browser tab to temp interrupt the backend to continue sending requests\n *\n * 通过 `visibilitychange` 事件来监听浏览器选项卡是否可见，一般用于当用户离开应用时暂时中断后端持续发送请求时\n */\nconst PAGE_VISIBILITY = new InjectionToken('PAGE_VISIBILITY`', {\n    factory: () => {\n        const doc = inject(DOCUMENT);\n        return fromEvent(doc, 'visibilitychange').pipe(startWith(0), map(() => !doc.hidden), distinctUntilChanged(), share());\n    }\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PAGE_VISIBILITY, WINDOW };\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;AASA,IAAM,SAAS,IAAI,eAAe,UAAU;AAAA,EACxC,SAAS,MAAM;AACX,UAAM,EAAE,YAAY,IAAI,OAAO,QAAQ;AACvC,QAAI,CAAC,aAAa;AACd,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC7C;AACA,WAAO;AAAA,EACX;AACJ,CAAC;AAOD,IAAM,kBAAkB,IAAI,eAAe,oBAAoB;AAAA,EAC3D,SAAS,MAAM;AACX,UAAM,MAAM,OAAO,QAAQ;AAC3B,WAAO,UAAU,KAAK,kBAAkB,EAAE,KAAK,UAAU,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,MAAM,GAAG,qBAAqB,GAAG,MAAM,CAAC;AAAA,EACxH;AACJ,CAAC;",
  "names": []
}
